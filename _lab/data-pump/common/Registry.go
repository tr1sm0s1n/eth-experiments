// Code generated via abigen V2 - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package common

import (
	"bytes"
	"errors"
	"math/big"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind/v2"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = bytes.Equal
	_ = errors.New
	_ = big.NewInt
	_ = common.Big1
	_ = types.BloomLookup
	_ = abi.ConvertType
)

// RegistryMetaData contains all meta data concerning the Registry contract.
var RegistryMetaData = bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"landIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"data\",\"type\":\"string[]\"}],\"name\":\"addProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"}],\"name\":\"getAllPropertyVersions\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"}],\"name\":\"getLatestProperty\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"}],\"name\":\"getPropertyVersions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getVersionProperty\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	ID:  "Registry",
	Bin: "",
}

// Registry is an auto generated Go binding around an Ethereum contract.
type Registry struct {
	abi abi.ABI
}

// NewRegistry creates a new instance of Registry.
func NewRegistry() *Registry {
	parsed, err := RegistryMetaData.ParseABI()
	if err != nil {
		panic(errors.New("invalid ABI: " + err.Error()))
	}
	return &Registry{abi: *parsed}
}

// Instance creates a wrapper for a deployed contract instance at the given address.
// Use this to create the instance object passed to abigen v2 library functions Call, Transact, etc.
func (c *Registry) Instance(backend bind.ContractBackend, addr common.Address) *bind.BoundContract {
	return bind.NewBoundContract(addr, c.abi, backend, backend, backend)
}

// PackAddProperty is the Go binding used to pack the parameters required for calling
// the contract method with ID 0x09ed08c6.
//
// Solidity: function addProperty(string[] landIds, string[] data) returns()
func (registry *Registry) PackAddProperty(landIds []string, data []string) []byte {
	enc, err := registry.abi.Pack("addProperty", landIds, data)
	if err != nil {
		panic(err)
	}
	return enc
}

// PackGetAllPropertyVersions is the Go binding used to pack the parameters required for calling
// the contract method with ID 0xdf32b071.
//
// Solidity: function getAllPropertyVersions(string propertyId) view returns(string[])
func (registry *Registry) PackGetAllPropertyVersions(propertyId string) []byte {
	enc, err := registry.abi.Pack("getAllPropertyVersions", propertyId)
	if err != nil {
		panic(err)
	}
	return enc
}

// UnpackGetAllPropertyVersions is the Go binding that unpacks the parameters returned
// from invoking the contract method with ID 0xdf32b071.
//
// Solidity: function getAllPropertyVersions(string propertyId) view returns(string[])
func (registry *Registry) UnpackGetAllPropertyVersions(data []byte) ([]string, error) {
	out, err := registry.abi.Unpack("getAllPropertyVersions", data)
	if err != nil {
		return *new([]string), err
	}
	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	return out0, err
}

// PackGetLatestProperty is the Go binding used to pack the parameters required for calling
// the contract method with ID 0xa76c9954.
//
// Solidity: function getLatestProperty(string propertyId) view returns(string)
func (registry *Registry) PackGetLatestProperty(propertyId string) []byte {
	enc, err := registry.abi.Pack("getLatestProperty", propertyId)
	if err != nil {
		panic(err)
	}
	return enc
}

// UnpackGetLatestProperty is the Go binding that unpacks the parameters returned
// from invoking the contract method with ID 0xa76c9954.
//
// Solidity: function getLatestProperty(string propertyId) view returns(string)
func (registry *Registry) UnpackGetLatestProperty(data []byte) (string, error) {
	out, err := registry.abi.Unpack("getLatestProperty", data)
	if err != nil {
		return *new(string), err
	}
	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	return out0, err
}

// PackGetPropertyVersions is the Go binding used to pack the parameters required for calling
// the contract method with ID 0x058ec0ca.
//
// Solidity: function getPropertyVersions(string propertyId) view returns(uint256)
func (registry *Registry) PackGetPropertyVersions(propertyId string) []byte {
	enc, err := registry.abi.Pack("getPropertyVersions", propertyId)
	if err != nil {
		panic(err)
	}
	return enc
}

// UnpackGetPropertyVersions is the Go binding that unpacks the parameters returned
// from invoking the contract method with ID 0x058ec0ca.
//
// Solidity: function getPropertyVersions(string propertyId) view returns(uint256)
func (registry *Registry) UnpackGetPropertyVersions(data []byte) (*big.Int, error) {
	out, err := registry.abi.Unpack("getPropertyVersions", data)
	if err != nil {
		return new(big.Int), err
	}
	out0 := abi.ConvertType(out[0], new(big.Int)).(*big.Int)
	return out0, err
}

// PackGetVersionProperty is the Go binding used to pack the parameters required for calling
// the contract method with ID 0x4f68fd12.
//
// Solidity: function getVersionProperty(string propertyId, uint256 version) view returns(string)
func (registry *Registry) PackGetVersionProperty(propertyId string, version *big.Int) []byte {
	enc, err := registry.abi.Pack("getVersionProperty", propertyId, version)
	if err != nil {
		panic(err)
	}
	return enc
}

// UnpackGetVersionProperty is the Go binding that unpacks the parameters returned
// from invoking the contract method with ID 0x4f68fd12.
//
// Solidity: function getVersionProperty(string propertyId, uint256 version) view returns(string)
func (registry *Registry) UnpackGetVersionProperty(data []byte) (string, error) {
	out, err := registry.abi.Unpack("getVersionProperty", data)
	if err != nil {
		return *new(string), err
	}
	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	return out0, err
}
